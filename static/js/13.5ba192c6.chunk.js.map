{"version":3,"sources":["component/common/MyBscroll.js","utils/transTime.js","views/Player/base/PlayerList.js","views/Player/Player.js","component/common/LazyLoading.js","static/images/loading-error.svg","static/images/loading.svg","static/images/needle.png","static/images/disc.png"],"names":["MyBscroll","ref","scrollObj","click","this","props","children","Component","time","duration","parseInt","minute","sec","length","setLocalStorage","localStorage","getLocalStorage","PlayerList","handleClick","item","index","getMenusData","getPlayerIndex","getData","handlePlay","init","indexOf","name","push","handleListShow","playerList","playerIndex","className","map","key","id","onClick","LazyLoading","src","picUrl","al","ar","connect","state","Player","msg","isShow","player","cd","a","getPlayLyric","getIsMenusPlay","getSongRUrl","result","getSongLyric","resultLyric","url","data","lyricParser","lrc","lyric","setState","handlePause","promptRef","handlePromptToggle","handleTogglePlayer","isPlay","getIsPlay","handleDishToggle","dishContent","lyricMain","getPlayStatus","isPlayStatus","animation","opacity","handleClickSlide","e","playerDOM","currentTime","nativeEvent","offsetX","lineRef","current","clientWidth","handleUp","handleToggleAudio","handleNext","audio","load","playPromise","play","undefined","then","catch","handleMode","modeTypeArr","modeNum","getModeNum","bol","num","componentDidRecover","lyricContent","createRef","cacheLifecycles","didRecover","document","querySelector","style","pause","nextProps","activateIndex","content","bscrollRef","scroll","scrollToElement","progress","history","goBack","display","needle","alt","width","height","transform","backgroundImage","disc","animationPlayState","transTime","icon","fontSize","Prompt","config","options","error","require","loading","throttleWait","module","exports"],"mappings":"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","file":"static/js/13.5ba192c6.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Scroll from 'react-bscroll'\r\nimport 'react-bscroll/lib/react-scroll.css'\r\nclass MyBscroll extends Component {\r\n    render() {\r\n        return (\r\n            <Scroll ref={scrollObj => this.scrollObj = scrollObj} click={true}>\r\n                {this.props.children}\r\n            </Scroll>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyBscroll;\r\n","//转换音频时长分/秒显示\r\nexport default  function (time) {\r\n    let duration = parseInt(time);\r\n    let minute = parseInt(duration/60) || 0;\r\n    let sec = (duration%60 || 0)+'';\r\n    let isM0 = ':';\r\n    if(minute === 0){\r\n        minute = '00';\r\n    }else if(minute < 10 ){\r\n        minute = '0'+minute;\r\n    }\r\n    if(sec.length === 1){\r\n        sec = '0'+sec;\r\n    }\r\n    return minute+isM0+sec\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMenusData, getPlayerIndex } from \"../../../store/action\";\r\nimport MyBscroll from \"../../../component/common/MyBscroll\";\r\nimport LazyLoading from \"../../../component/common/LazyLoading\";\r\nimport localStorage from \"../../../utils/localStorage\";\r\nconst { setLocalStorage, getLocalStorage } = localStorage;\r\nclass PlayerList extends Component {\r\n  // 点击列表选项\r\n  handleClick = (item, index) => {\r\n    const { getMenusData, getPlayerIndex, getData, handlePlay } = this.props;\r\n    const init = getLocalStorage(\"hot_history\") || [];\r\n    if (init.indexOf(item.name) === -1) {\r\n      init.push(item.name);\r\n      setLocalStorage(\"hot_history\", init);\r\n    }\r\n    getMenusData(item);\r\n    getPlayerIndex(index);\r\n    getData(item, handlePlay);\r\n    setLocalStorage(\"player\", item);\r\n    setLocalStorage(\"playerIndex\", index);\r\n    this.props.handleListShow(false, 0);\r\n  };\r\n  render() {\r\n    const { playerList, playerIndex } = this.props;\r\n    return (\r\n      <section className={\"content\"}>\r\n        <MyBscroll>\r\n          {playerList.map((item, index) => (\r\n            <div key={item.id} onClick={() => this.handleClick(item, index)}>\r\n              <div className=\"left\">\r\n                <LazyLoading src={item.picUrl} />\r\n                <div className=\"info\">\r\n                  <p>{item.name}</p>\r\n                  <p>\r\n                    {item.al ? item.al.name : item.al} -\r\n                    {(item.ar || []).map((item) => (\r\n                      <Fragment key={item.id}>{item.name} </Fragment>\r\n                    ))}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <i\r\n                className={\r\n                  playerIndex === index\r\n                    ? \"iconfont icon-bofang1\"\r\n                    : \"iconfont icon-kaishi\"\r\n                }\r\n              ></i>\r\n            </div>\r\n          ))}\r\n        </MyBscroll>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    playerList: state.playerList,\r\n    playerIndex: state.playerIndex,\r\n  }),\r\n  { getMenusData, getPlayerIndex }\r\n)(PlayerList);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getIsPlay,\r\n  getMenusData,\r\n  getPlayStatus,\r\n  getPlayLyric,\r\n  getPlayerIndex,\r\n  getModeNum,\r\n} from \"../../store/action\";\r\nimport { getSongRUrl, getSongLyric, getIsMenusPlay } from \"../../api/index\";\r\nimport MyBscroll from \"../../component/common/MyBscroll\";\r\nimport Prompt from \"../../component/content/Prompt\";\r\nimport transTime from \"../../utils/transTime\";\r\nimport lyricParser from \"../../utils/parseLyric\";\r\nimport PlayerList from \"./base/PlayerList\";\r\nimport localStorage from \"../../utils/localStorage\";\r\nimport animation from \"../../utils/animation\";\r\nimport needle from \"../../static/images/needle.png\";\r\nimport disc from \"../../static/images/disc.png\";\r\nconst { setLocalStorage } = localStorage;\r\nclass Player extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // 歌词滚动内容\r\n    this.lyricContent = createRef();\r\n    // 光片滚动区域的Ref\r\n    this.dishContent = createRef();\r\n    // 歌词区域的Ref\r\n    this.lyricMain = createRef();\r\n    // 进度条区域的Ref\r\n    this.lineRef = createRef();\r\n    // 是否显示播放列表\r\n    this.playerList = createRef();\r\n    props.cacheLifecycles.didRecover(this.componentDidRecover);\r\n  }\r\n  state = {\r\n    msg: \"\", // 提示信息\r\n    isShow: false, // 是的显示播放列表\r\n  };\r\n  UNSAFE_componentWillMount() {\r\n    this.getData(this.props.player, () => {});\r\n  }\r\n  componentDidMount() {\r\n    // 获取音频的DOM节点\r\n    this.playerDOM = document.querySelector(\".player_audio\");\r\n    // 初始都opacity显示视频\r\n    this.lyricMain.current.style.opacity = 1;\r\n    this.lyricMain.current.style.opacity = 1;\r\n    // 初始是否可以播放音频\r\n    if (this.props.isPlay) {\r\n      this.handlePlay();\r\n    }\r\n  }\r\n  // 获取当前播放音频的相关数据\r\n  getData = async (player, cd) => {\r\n    const { getMenusData, getPlayLyric } = this.props;\r\n    try {\r\n      await getIsMenusPlay(player.id);\r\n      const result = await getSongRUrl(player.id);\r\n      const resultLyric = await getSongLyric(player.id);\r\n      const url = result.data.data[0].url;\r\n      if (url) {\r\n        getMenusData({\r\n          ...player,\r\n          url,\r\n        });\r\n        setLocalStorage(\"player\", {\r\n          ...player,\r\n          url,\r\n        });\r\n        getPlayLyric(lyricParser(resultLyric.data.lrc.lyric));\r\n      } else {\r\n        this.setState(\r\n          {\r\n            msg: \"该歌曲,无版权权限\",\r\n          },\r\n          () => {\r\n            this.handlePause();\r\n            getPlayLyric([]);\r\n            this.promptRef.handlePromptToggle();\r\n          }\r\n        );\r\n      }\r\n      cd();\r\n    } catch (e) {\r\n      this.setState(\r\n        {\r\n          msg: \"该歌曲,无版权权限\",\r\n        },\r\n        () => {\r\n          this.handlePause();\r\n          getPlayLyric([]);\r\n          this.promptRef.handlePromptToggle();\r\n        }\r\n      );\r\n    }\r\n  };\r\n  // 点击切换视频\r\n  handleTogglePlayer = () => {\r\n    const { isPlay, getIsPlay } = this.props;\r\n    if (!isPlay) {\r\n      getIsPlay(true);\r\n      this.handlePlay();\r\n    } else {\r\n      getIsPlay(false);\r\n      this.handlePause();\r\n    }\r\n  };\r\n  // 点击播放视频\r\n  handlePlay() {\r\n    const audio = this.playerDOM;\r\n    let playPromise = audio.play();\r\n    if (playPromise !== undefined) {\r\n      playPromise\r\n        .then(() => {\r\n          audio.play();\r\n        })\r\n        .catch(() => {});\r\n    }\r\n  }\r\n  // 点击关闭视频\r\n  handlePause() {\r\n    const audio = this.playerDOM;\r\n    if (audio) {\r\n      audio.pause();\r\n    }\r\n  }\r\n  // 切换视频的状态\r\n  handleDishToggle = (dishContent, lyricMain) => {\r\n    const { getPlayStatus, isPlayStatus } = this.props;\r\n    animation(\r\n      dishContent,\r\n      {\r\n        opacity: 0,\r\n      },\r\n      0.4,\r\n      () => {\r\n        getPlayStatus(!isPlayStatus);\r\n        animation(\r\n          lyricMain,\r\n          {\r\n            opacity: 1,\r\n          },\r\n          0.4,\r\n          () => {\r\n            getPlayStatus(!isPlayStatus);\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n  // 点击进度条\r\n  handleClickSlide = (e) => {\r\n    if (this.playerDOM.duration) {\r\n      //人为手动的修改了currentTime属性\r\n      const currentTime =\r\n        (e.nativeEvent.offsetX * this.playerDOM.duration) /\r\n        this.lineRef.current.clientWidth;\r\n      if (!this.props.isPlay) {\r\n        this.props.getIsPlay(true);\r\n        this.handlePlay();\r\n      }\r\n      this.playerDOM.currentTime = currentTime;\r\n    }\r\n  };\r\n  // 点击播放当前歌单的上一首歌曲\r\n  handleUp = async () => {\r\n    const { playerList, playerIndex, getPlayerIndex } = this.props;\r\n    let player = {};\r\n    if (playerIndex) {\r\n      getPlayerIndex(playerIndex - 1);\r\n      setLocalStorage(\"playerIndex\", playerIndex - 1);\r\n      player = playerList[playerIndex - 1];\r\n    } else {\r\n      getPlayerIndex(playerList.length - 1);\r\n      setLocalStorage(\"playerIndex\", playerList.length - 1);\r\n      player = playerList[playerList.length - 1];\r\n    }\r\n    this.handleToggleAudio(player);\r\n  };\r\n  // 点击播放当前歌单的下一首歌曲\r\n  handleNext = async () => {\r\n    const { playerList, playerIndex, getPlayerIndex } = this.props;\r\n    let player = {};\r\n    if (playerIndex === playerList.length - 1) {\r\n      getPlayerIndex(0);\r\n      setLocalStorage(\"playerIndex\", 0);\r\n      player = playerList[0];\r\n    } else {\r\n      getPlayerIndex(playerIndex + 1);\r\n      setLocalStorage(\"playerIndex\", playerIndex + 1);\r\n      player = playerList[playerIndex + 1];\r\n    }\r\n    this.handleToggleAudio(player);\r\n  };\r\n  // 切换歌曲\r\n  handleToggleAudio = async (player) => {\r\n    const { getMenusData, getIsPlay } = this.props;\r\n    getMenusData(player);\r\n    setLocalStorage(\"player\", player);\r\n    this.getData(player, () => {\r\n      getIsPlay(true);\r\n      const audio = this.playerDOM;\r\n      audio.load();\r\n      const playPromise = audio.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise\r\n          .then(() => {\r\n            audio.play();\r\n          })\r\n          .catch(() => {});\r\n      }\r\n    });\r\n  };\r\n  // 当props的数据发生改变的时候触发该声明周期函数\r\n  componentDidUpdate(nextProps) {\r\n    const { activateIndex } = nextProps;\r\n    const content = this.lyricContent.current;\r\n    if (content) {\r\n      const item = content.children[activateIndex];\r\n      if (item) {\r\n        const scroll = this.bscrollRef.scrollObj.scroll;\r\n        scroll.scrollToElement(item, 1000, 0, true);\r\n      }\r\n    }\r\n  }\r\n  // 点击切换模式\r\n  handleMode = (msg) => {\r\n    const { modeTypeArr, modeNum, getModeNum } = this.props;\r\n    if (modeTypeArr.length - 1 === modeNum) {\r\n      getModeNum(0);\r\n    } else {\r\n      getModeNum(modeNum + 1);\r\n    }\r\n    this.setState(\r\n      {\r\n        msg: msg,\r\n      },\r\n      () => {\r\n        this.promptRef.handlePromptToggle();\r\n      }\r\n    );\r\n  };\r\n  // 点击设置播放列表的状态\r\n  handleListShow = (bol = false, num = 0) => {\r\n    if (bol) {\r\n      this.setState(\r\n        {\r\n          isShow: bol,\r\n        },\r\n        () => {\r\n          animation(\r\n            this.playerList.current,\r\n            {\r\n              opacity: num,\r\n            },\r\n            0.8\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      animation(\r\n        this.playerList.current,\r\n        {\r\n          opacity: num,\r\n        },\r\n        0.8,\r\n        () => {\r\n          this.setState({\r\n            isShow: bol,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n  componentDidRecover = () => {\r\n    this.getData(this.props.player, () => {});\r\n  };\r\n  render() {\r\n    const {\r\n      player,\r\n      isPlay,\r\n      progress,\r\n      duration,\r\n      currentTime,\r\n      isPlayStatus,\r\n      lyric,\r\n      activateIndex,\r\n      modeTypeArr,\r\n      modeNum,\r\n      getIsPlay,\r\n    } = this.props;\r\n    const { msg, isShow } = this.state;\r\n    return (\r\n      <>\r\n        <div className={\"player\"}>\r\n          {/*头部*/}\r\n          <header className={\"player_navbar\"}>\r\n            <i\r\n              className={\"iconfont icon-jiantouzuo\"}\r\n              onClick={() => this.props.history.goBack()}\r\n            ></i>\r\n            <div className=\"info\">\r\n              <p>{player.name}</p>\r\n              <p>\r\n                <span>{player.al.name}</span>\r\n                <em>/</em>\r\n                <span>\r\n                  {player.ar.map((item) => (\r\n                    <em key={item.id}>{item.name}</em>\r\n                  ))}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </header>\r\n          {/*图片旋转播放*/}\r\n          <section\r\n            className={\"player_container\"}\r\n            style={{ display: !isPlayStatus ? \"block\" : \"none\" }}\r\n            ref={this.dishContent}\r\n          >\r\n            <div\r\n              className={\"dish\"}\r\n              onClick={() =>\r\n                this.handleDishToggle(\r\n                  this.dishContent.current,\r\n                  this.lyricMain.current\r\n                )\r\n              }\r\n            >\r\n              <div className=\"needle\">\r\n                <img\r\n                  src={needle}\r\n                  alt=\"needle\"\r\n                  width={\"100%\"}\r\n                  height={\"100%\"}\r\n                  style={{\r\n                    transform: !isPlay\r\n                      ? \"scale(0.5)\"\r\n                      : \"scale(0.5) rotate(-30deg)\",\r\n                  }}\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"disc\"\r\n                style={{\r\n                  backgroundImage: `url(${disc})`,\r\n                  animationPlayState: !isPlay ? \"paused\" : \"running\",\r\n                }}\r\n              >\r\n                <div className=\"disc_cover\">\r\n                  <img src={player.picUrl} alt={player.name} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          {/*歌词播放*/}\r\n          <section\r\n            className={\"lyric_wrap\"}\r\n            style={{ display: isPlayStatus ? \"block\" : \"none\" }}\r\n            onClick={() =>\r\n              this.handleDishToggle(\r\n                this.lyricMain.current,\r\n                this.dishContent.current\r\n              )\r\n            }\r\n            ref={this.lyricMain}\r\n          >\r\n            <MyBscroll ref={(bscrollRef) => (this.bscrollRef = bscrollRef)}>\r\n              <ul className={\"list\"} ref={this.lyricContent}>\r\n                {lyric.map((item, index) => (\r\n                  <li\r\n                    key={index}\r\n                    className={index === activateIndex ? \"activate\" : null}\r\n                  >\r\n                    {item.content}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </MyBscroll>\r\n          </section>\r\n          {/* 操作 */}\r\n          <div className={\"player_controls\"}>\r\n            <div className=\"time\">\r\n              <span>{transTime(currentTime)}</span>\r\n              <div\r\n                className={\"slidre\"}\r\n                onClick={this.handleClickSlide}\r\n                ref={this.lineRef}\r\n              >\r\n                <div className=\"bar\" style={{ width: progress }}>\r\n                  <div className=\"btn\"></div>\r\n                </div>\r\n              </div>\r\n              <span>{transTime(duration)}</span>\r\n            </div>\r\n            <div className=\"operation\">\r\n              <i\r\n                className={\"iconfont \" + modeTypeArr[modeNum].icon}\r\n                onClick={() =>\r\n                  this.handleMode(\r\n                    modeTypeArr[\r\n                      modeNum + 1 === modeTypeArr.length ? 0 : modeNum + 1\r\n                    ].msg\r\n                  )\r\n                }\r\n              ></i>\r\n              <i\r\n                className={\"iconfont icon-zuobofang\"}\r\n                onClick={this.handleUp}\r\n              ></i>\r\n              <i\r\n                className={\r\n                  isPlay ? \"iconfont icon-bofang1\" : \"iconfont icon-kaishi\"\r\n                }\r\n                onClick={this.handleTogglePlayer}\r\n                style={{ fontSize: \".8rem\" }}\r\n              ></i>\r\n              <i\r\n                className={\"iconfont icon-youbofang\"}\r\n                onClick={this.handleNext}\r\n              ></i>\r\n              <i\r\n                className={\"iconfont icon-liebiao\"}\r\n                onClick={() => this.handleListShow(true, 1)}\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <section\r\n          className={\"player_list\"}\r\n          style={{ display: isShow ? \"block\" : \"none\" }}\r\n          ref={this.playerList}\r\n          onClick={() => this.handleListShow(false, 0)}\r\n        >\r\n          <PlayerList\r\n            handleListShow={this.handleListShow}\r\n            getData={this.getData}\r\n            handlePlay={() => {\r\n              getIsPlay(true);\r\n              this.handlePlay();\r\n            }}\r\n          />\r\n        </section>\r\n        <Prompt msg={msg} ref={(promptRef) => (this.promptRef = promptRef)} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    player: state.player,\r\n    isPlay: state.isPlay,\r\n    progress: state.progress,\r\n    currentTime: state.currentTime,\r\n    duration: state.duration,\r\n    isPlayStatus: state.isPlayStatus,\r\n    lyric: state.lyric,\r\n    activateIndex: state.activateIndex,\r\n    playerList: state.playerList,\r\n    playerIndex: state.playerIndex,\r\n    modeTypeArr: state.modeTypeArr,\r\n    modeNum: state.modeNum,\r\n  }),\r\n  {\r\n    getIsPlay,\r\n    getMenusData,\r\n    getPlayStatus,\r\n    getPlayLyric,\r\n    getPlayerIndex,\r\n    getModeNum,\r\n  }\r\n)(Player);\r\n","import React from 'react'\r\n// 引入图片懒加载的插件\r\nimport Lazyload from \"r-img-lazyload\";\r\n\r\nfunction LazyLoading (props) {\r\n    // 我们使用图片懒加载的目的是缓解首屏加载的压力，优化用户体验\r\n\r\n    // 配置图片懒加载\r\n    const config = {\r\n        // 其他配置项\r\n        options: {\r\n            error: require(\"../../static/images/loading-error.svg\"), // 加载失败后展示的图像\r\n            loading: require(\"../../static/images/loading.svg\"), // 加载中展示的图像\r\n            throttleWait: 1000 // 节流等待时间\r\n        },\r\n        // 图片地址\r\n        src: props.src\r\n    };\r\n    return <Lazyload {...config}/>\r\n}\r\n\r\nexport default LazyLoading\r\n","module.exports = __webpack_public_path__ + \"static/media/loading-error.99e68751.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.0bab9ee3.svg\";","module.exports = __webpack_public_path__ + \"static/media/needle.9c7747f9.png\";","module.exports = __webpack_public_path__ + \"static/media/disc.7868e0d5.png\";"],"sourceRoot":""}