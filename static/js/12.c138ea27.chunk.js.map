{"version":3,"sources":["views/Video/Video.js","component/common/LazyLoading.js","static/images/loading-error.svg","static/images/loading.svg","component/content/ScrollTag.js","utils/sessionStorage.js"],"names":["setSessionStorage","sessionStorage","getSessionStorage","Video","state","tag","videoList","handleChangeTag","item","getVideoTag","id","this","getData","result","setState","data","loginStatus","props","Object","keys","length","Toast","info","getVideoTagData","code","datas","className","tagList","tagIndex","index","map","to","vid","key","src","coverUrl","title","creator","avatarUrl","nickname","praisedCount","commentCount","Component","connect","LazyLoading","config","options","error","require","loading","throttleWait","module","exports","ScrollTag","handleClickTag","onClick","name","JSON","parse","getItem","setItem","stringify","recommendSessionStorage","removeItem"],"mappings":"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","file":"static/js/12.c138ea27.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getVideoTag, getVideoTagData } from \"../../api/index\";\r\nimport { connect } from \"react-redux\";\r\nimport ScrollTag from \"../../component/content/ScrollTag\";\r\nimport Loading from \"../../component/content/Loading\";\r\nimport sessionStorage from \"../../utils/sessionStorage\";\r\nimport LazyLoading from \"../../component/common/LazyLoading\";\r\nimport { Toast } from 'antd-mobile';\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nconst { setSessionStorage, getSessionStorage } = sessionStorage;\r\n\r\nclass Video extends Component {\r\n  state = {\r\n    tag: [], // 视频类型列表\r\n    videoList: [], // 视频列表数据\r\n  };\r\n  // 获取视频数据\r\n  UNSAFE_componentWillMount() {\r\n    this.getData();\r\n  }\r\n  async getData() {\r\n    // 初始获取视频类型数据和第一个视频数据\r\n    const result = await getVideoTag();\r\n    this.setState(\r\n      {\r\n        tag: result.data.data,\r\n      },\r\n      () => {\r\n        this.getVideoTag(\r\n          (getSessionStorage(\"video_tag\") || {}).id || this.state.tag[0].id\r\n        );\r\n      }\r\n    );\r\n  }\r\n  // 获取视频标签下的视频数据\r\n  async getVideoTag(id) {\r\n    const { loginStatus } = this.props;\r\n    if(!Object.keys(loginStatus).length) {\r\n      return Toast.info('请先登录');\r\n    }\r\n    const result = await getVideoTagData(id);\r\n    if(result.data.code === 200) {\r\n      this.setState({\r\n        videoList: result.data.datas,\r\n      });\r\n    }\r\n\r\n  }\r\n  // 点击tag标签\r\n  handleChangeTag = (item) => {\r\n    setSessionStorage(\"video_tag\", item);\r\n    this.getVideoTag(item.id);\r\n  };\r\n  render() {\r\n    const { tag, videoList } = this.state;\r\n    \r\n    if (tag.length) {\r\n      return (\r\n        <>\r\n          <div className={\"video\"}>\r\n            <ScrollTag\r\n              tagList={tag}\r\n              handleChangeTag={this.handleChangeTag}\r\n              tagIndex={(getSessionStorage(\"video_tag\") || {}).index}\r\n            />\r\n            <section>\r\n              {videoList.map((item, index) => (\r\n                <NavLink to={\"/videoDetails/\" + item.data.vid} key={index}>\r\n                  <LazyLoading src={item.data.coverUrl} />\r\n                  <div className=\"info\">\r\n                    <h4>{item.data.title}</h4>\r\n                    <LazyLoading\r\n                      src={item.data.creator && item.data.creator.avatarUrl}\r\n                    />\r\n                  </div>\r\n                  <section className=\"bar\">\r\n                    <div className=\"left\">\r\n                      <LazyLoading\r\n                        src={item.data.creator && item.data.creator.avatarUrl}\r\n                      />\r\n                      <p>{item.data.creator && item.data.creator.nickname}</p>\r\n                    </div>\r\n                    <div className=\"icon\">\r\n                      <p>\r\n                        <i className={\"iconfont icon-ziyuan1\"}></i>\r\n                        <span>{item.data.praisedCount}</span>\r\n                      </p>\r\n                      <p>\r\n                        <i className={\"iconfont icon-pinglun\"}></i>\r\n                        <span>{item.data.commentCount}</span>\r\n                      </p>\r\n                      <p>\r\n                        <i className={\"iconfont icon-ziyuan\"}></i>\r\n                      </p>\r\n                    </div>\r\n                  </section>\r\n                </NavLink>\r\n              ))}\r\n            </section>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return <Loading />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({\r\n  loginStatus: state.loginStatus,\r\n}))(Video);\r\n","import React from 'react'\r\n// 引入图片懒加载的插件\r\nimport Lazyload from \"r-img-lazyload\";\r\n\r\nfunction LazyLoading (props) {\r\n    // 我们使用图片懒加载的目的是缓解首屏加载的压力，优化用户体验\r\n\r\n    // 配置图片懒加载\r\n    const config = {\r\n        // 其他配置项\r\n        options: {\r\n            error: require(\"../../static/images/loading-error.svg\"), // 加载失败后展示的图像\r\n            loading: require(\"../../static/images/loading.svg\"), // 加载中展示的图像\r\n            throttleWait: 1000 // 节流等待时间\r\n        },\r\n        // 图片地址\r\n        src: props.src\r\n    };\r\n    return <Lazyload {...config}/>\r\n}\r\n\r\nexport default LazyLoading\r\n","module.exports = __webpack_public_path__ + \"static/media/loading-error.99e68751.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.0bab9ee3.svg\";","import React, {Component} from 'react';\r\n\r\nclass ScrollTag extends Component {\r\n    state = {\r\n        tagIndex:  this.props.tagIndex || 0, // 记录初始点击了第几个标签\r\n    }\r\n    handleClickTag = (item, index) => {\r\n        this.setState({\r\n            tagIndex: index\r\n        })\r\n        this.props.handleChangeTag({...item, index})\r\n    }\r\n    render() {\r\n        const {tagList} = this.props\r\n        const {tagIndex} = this.state\r\n        /*\r\n        *   props 参数\r\n        *       handleChangeTag：点击标签触发的事件处理函数(必须)\r\n        *       tagList：数据源(必须)\r\n        *       tagIndex：当前点击的index索引值(可选)\r\n        * */\r\n        return (\r\n            <nav className=\"nav_list\">\r\n                <div className=\"nav_list_scroll\">\r\n                    {\r\n                        tagList.map((item, index) => (\r\n                            <section\r\n                                className={index === tagIndex ? 'activate' : null}\r\n                                key={index}\r\n                                onClick={() => this.handleClickTag(item,index)}\r\n                            >\r\n                                <p>{item.name}</p>\r\n                            </section>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScrollTag;\r\n","// 本文件是操作本地存储数据的sessionStorage\r\n\r\nexport default {\r\n    getSessionStorage (name) { // 获取\r\n        return JSON.parse(sessionStorage.getItem(name))\r\n    },\r\n    setSessionStorage (name, data) { // 设置\r\n        sessionStorage.setItem(name, JSON.stringify(data))\r\n    },\r\n    recommendSessionStorage (name) { // 删除\r\n        sessionStorage.removeItem(name)\r\n    }\r\n}\r\n"],"sourceRoot":""}