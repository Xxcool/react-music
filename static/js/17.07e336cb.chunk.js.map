{"version":3,"sources":["component/common/Header.js","component/common/MenuShow.js","views/Home/Home.js","component/common/ScrollHeader.js"],"names":["Header","props","navConfig","path","msg","headerRef","createRef","this","setHeaderColor","window","location","pathname","dom","current","classList","add","remove","className","ref","onClick","menuShow","map","item","index","key","to","Component","MenuShow","history","push","withRouter","Home","state","isMenuShow","setState","animation","menuRef","left","opacity","stopBodyScroll","menuHide","innerWidth","style","ScrollHeader","height","fallback","Loading","secondRouter","exact","component","when","behavior","cached","position","zIndex","visibility","pointerEvents","saveScrollPosition","display","setFixed","scrollTop","document","documentElement","headerDOM","headerAntiShake","addEventListener","children","removeEventListener"],"mappings":"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","file":"static/js/17.07e336cb.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default class Header extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.headerRef = createRef()\r\n    }\r\n    componentDidMount () {\r\n        this.setHeaderColor(window.location.pathname)\r\n    }\r\n    componentDidUpdate () {\r\n        this.setHeaderColor(window.location.pathname)\r\n    }\r\n    // 在不同场景下设置不同头部的颜色\r\n    setHeaderColor (pathname) {\r\n        const initPahtname = '/home/my' // 初始需要显示头部背景色的路径\r\n        const dom = this.headerRef.current\r\n        if (pathname === initPahtname) {\r\n            dom.classList.add('dark')\r\n        } else {\r\n            dom.classList.remove('dark')\r\n        }\r\n    }\r\n    navConfig = [\r\n        {path: '/home/my', msg: '我的'},\r\n        {path: '/home/discover', msg: '发现'},\r\n        {path: '/home/video', msg: '视频'}\r\n    ]\r\n    render() {\r\n        return (\r\n            <header className=\"header\" ref={this.headerRef}>\r\n                <i className=\"iconfont icon-list\" onClick={this.props.menuShow}></i>\r\n                <nav className=\"header_nav\">\r\n                    {\r\n                        this.navConfig.map((item,index) => (\r\n                            <p key={item.path}>\r\n                                <NavLink to={item.path}>{item.msg}</NavLink>\r\n                            </p>\r\n                        ))\r\n                    }\r\n                </nav>\r\n                <NavLink to=\"/search\">\r\n                    <i className=\"iconfont icon-search\"></i>\r\n                </NavLink>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n// 菜单内容\r\nclass MenuShow extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"menu_show\">\r\n                <div className=\"drawer_sidebar_bgc\"></div>\r\n                <ul className=\"drawer_sidebar_list\">\r\n                    <li onClick={() => {\r\n                       this.props.history.push('/skin')\r\n                    }}>\r\n                        <p>皮肤中心</p>\r\n                        <i className=\"iconfont icon-jiantou\"></i>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(MenuShow);\r\n","import React, { Component, Suspense, createRef } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CacheRoute, { CacheSwitch } from \"react-router-cache-route\";\r\nimport { secondRouter } from \"../../router/index\";\r\nimport animation from \"../../utils/animation\";\r\nimport stopBodyScroll from \"../../utils/stopBodyScroll\";\r\nimport Header from \"../../component/common/Header\";\r\nimport MenuShow from \"../../component/common/MenuShow\";\r\nimport ScrollHeader from \"../../component/common/ScrollHeader\";\r\nimport Loading from \"../../component/content/Loading\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // ref标记menu内容区域节点\r\n    this.menuRef = createRef();\r\n  }\r\n  state = {\r\n    isMenuShow: false, // 是否显示导航栏的内容\r\n  };\r\n  componentDidMount() {\r\n    // 当DOM加载完毕的时候初始设置他的left值（不能为0）是根据视口宽度决定的widow.innerWidth\r\n    this.menuRef.current.style.left = -window.innerWidth + \"px\";\r\n  }\r\n  // 点击显示menu的内容\r\n  menuShow = () => {\r\n    this.setState({\r\n      isMenuShow: true,\r\n    });\r\n    animation(\r\n      this.menuRef.current,\r\n      {\r\n        left: 0,\r\n        opacity: 1,\r\n      },\r\n      0.3\r\n    );\r\n    stopBodyScroll(true);\r\n  };\r\n  // 点击隐藏menu的内容\r\n  menuHide = () => {\r\n    animation(\r\n      this.menuRef.current,\r\n      {\r\n        left: -window.innerWidth,\r\n        opacity: 0,\r\n      },\r\n      0.3,\r\n      () => {\r\n        this.setState({\r\n          isMenuShow: false,\r\n        });\r\n      }\r\n    );\r\n    stopBodyScroll(false);\r\n  };\r\n  render() {\r\n    const { isMenuShow } = this.state;\r\n    return (\r\n      <div className={\"home\"}>\r\n        <ScrollHeader height={50}>\r\n          <Header menuShow={this.menuShow} />\r\n        </ScrollHeader>\r\n        {/* 二级路由 */}\r\n        <Suspense fallback={<Loading />}>\r\n          <CacheSwitch>\r\n            {secondRouter.map((item) => {\r\n              if (item.exact) {\r\n                return (\r\n                  <CacheRoute\r\n                    key={item.path}\r\n                    path={item.path}\r\n                    component={item.component}\r\n                    exact={item.exact}\r\n                    // 一些是路由缓存插件的一些配置\r\n                    when=\"always\"\r\n                    behavior={(cached) =>\r\n                      cached\r\n                        ? {\r\n                            style: {\r\n                              position: \"absolute\",\r\n                              zIndex: -9999,\r\n                              opacity: 0,\r\n                              visibility: \"hidden\",\r\n                              pointerEvents: \"none\",\r\n                            },\r\n                            className: \"__CacheRoute__wrapper__cached\",\r\n                          }\r\n                        : {\r\n                            className: \"__CacheRoute__wrapper__uncached\",\r\n                          }\r\n                    }\r\n                    saveScrollPosition={true}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <CacheRoute\r\n                    key={item.path}\r\n                    path={item.path}\r\n                    component={item.component}\r\n                    // 一些是路由缓存插件的一些配置\r\n                    when=\"always\"\r\n                    behavior={(cached) =>\r\n                      cached\r\n                        ? {\r\n                            style: {\r\n                              position: \"absolute\",\r\n                              zIndex: -9999,\r\n                              opacity: 0,\r\n                              visibility: \"hidden\",\r\n                              pointerEvents: \"none\",\r\n                            },\r\n                            className: \"__CacheRoute__wrapper__cached\",\r\n                          }\r\n                        : {\r\n                            className: \"__CacheRoute__wrapper__uncached\",\r\n                          }\r\n                    }\r\n                    saveScrollPosition={true}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n            <Redirect to=\"/home/discover\" />\r\n          </CacheSwitch>\r\n        </Suspense>\r\n        <div\r\n          className=\"menu_mode_fake\"\r\n          onClick={this.menuHide}\r\n          style={{ display: isMenuShow ? \"block\" : \"none\" }}\r\n          ref={this.menuRef}\r\n        >\r\n          <MenuShow />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, createRef } from 'react'\r\n// 处理头部固定定位的时候 抖动问题的组件\r\n// 启动fixed定位的时候 我们要有一个节点来进行防抖(设置高)，否则会有抖动的问题\r\nexport default class ScrollHeader extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        // ref标记头部的节点\r\n        this.headerRef = createRef()\r\n        // ref标记头部节点的防抖层\r\n        this.headerAntiShake = createRef()\r\n    }\r\n    componentDidMount () {\r\n        window.addEventListener('scroll', this.setFixed)\r\n    }\r\n    // 设置头部是否可以为fixed定位进行展示\r\n    setFixed = () => {\r\n        /* \r\n            props参数\r\n                height：固定防抖层的高度\r\n        */\r\n        const scrollTop = document.documentElement.scrollTop\r\n        const headerDOM = this.headerRef.current\r\n        if (scrollTop > 0) {\r\n            this.headerAntiShake.current.style.height = this.props.height + 'px'\r\n            headerDOM.classList.add('header_fixed')\r\n        } else {\r\n            headerDOM.classList.remove('header_fixed')\r\n            this.headerAntiShake.current.style.height = null\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div ref={this.headerAntiShake}>\r\n                <section className=\"\" ref={this.headerRef}>\r\n                    {this.props.children}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n    // 组件销毁的时候清除定时器\r\n    componentWillUnmount () {\r\n        window.removeEventListener('scroll', this.setFixed)\r\n    }\r\n}\r\n"],"sourceRoot":""}