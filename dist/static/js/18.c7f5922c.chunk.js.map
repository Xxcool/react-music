{"version":3,"sources":["views/Search/Search.js","utils/throttle.js","utils/total.js","component/common/ScrollHeader.js"],"names":["setLocalStorage","localStorage","getLocalStorage","Search","props","state","hotSearch","msg","historyList","value","searchList","keyword","searchDetailList","handleChange","e","a","setState","target","match","getSearchSuggest","result","data","allMatch","handleClickTo","item","index","getSongRUrl","id","resutlSongUrl","playerList","map","name","picUrl","artists","img1v1Url","ar","al","album","option","url","init","indexOf","push","getMenusData","getPlayerList","getPlayerIndex","getIsPlay","history","handleClick","fn","time","start","newDate","Date","args","call","this","throttle","getDataHot","getSearchHot","searchWord","promptRef","handlePromptToggle","searchItemClick","getSearchDetailList","songs","length","className","ScrollHeader","height","onClick","type","placeholder","onChange","style","display","key","num","iconUrl","src","alt","content","score","Prompt","ref","Loading","Component","connect","setFixed","scrollTop","document","documentElement","headerDOM","headerRef","current","headerAntiShake","classList","add","remove","createRef","window","addEventListener","children","removeEventListener"],"mappings":"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","file":"static/js/18.c7f5922c.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  getSearchHot,\r\n  getSearchSuggest,\r\n  getSearchDetailList,\r\n  getSongRUrl,\r\n} from \"../../api/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getMenusData,\r\n  getPlayerList,\r\n  getPlayerIndex,\r\n  getIsPlay,\r\n} from \"../../store/action\";\r\nimport total from \"../../utils/total\";\r\nimport localStorage from \"../../utils/localStorage\";\r\nimport ScrollHeader from \"../../component/common/ScrollHeader\";\r\nimport Prompt from \"../../component/content/Prompt\";\r\nimport Loading from \"../../component/content/Loading\";\r\nimport throttle from \"../../utils/throttle\";\r\nconst { setLocalStorage, getLocalStorage } = localStorage;\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    hotSearch: [], // 搜索热歌榜数据\r\n    msg: \"\", // 提示框内容\r\n    historyList: [], // 历史记录列表\r\n    value: \"\",\r\n    searchList: [], // 搜索列表\r\n    keyword: \"\", // 当前搜索的keyword值\r\n    searchDetailList: [], // 搜索详情内容列表\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    // 从新赋值成函数节流的方法\r\n    this.handleClick = throttle(this.handleClick, 2000);\r\n  }\r\n  // 同步第获取数据\r\n  UNSAFE_componentWillMount() {\r\n    this.getDataHot();\r\n  }\r\n  async getDataHot() {\r\n    // 获取最火热搜索榜\r\n    const result = await getSearchHot();\r\n    this.setState({\r\n      hotSearch: result.data.data,\r\n      historyList: getLocalStorage(\"hot_history\"),\r\n    });\r\n  }\r\n  // 点击歌曲列表的选项 并且进行函数节流\r\n  handleClick(item) {\r\n    const init = getLocalStorage(\"hot_history\") || [];\r\n    if (init.indexOf(item.searchWord) === -1) {\r\n      init.push(item.searchWord);\r\n      setLocalStorage(\"hot_history\", init);\r\n    }\r\n    this.setState(\r\n      {\r\n        msg: \"搜索成功\",\r\n        historyList: getLocalStorage(\"hot_history\"),\r\n      },\r\n      () => {\r\n        this.promptRef.handlePromptToggle(); // 调用消息提示组件的方法\r\n      }\r\n    );\r\n    this.searchItemClick(item.searchWord);\r\n  }\r\n  // 搜索歌曲\r\n  handleChange = async (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n    if (!e.target.value.match(/^[ ]*$/)) {\r\n      const result = await getSearchSuggest(e.target.value);\r\n      this.setState({\r\n        searchList: result.data.result.allMatch || [],\r\n      });\r\n    }\r\n  };\r\n  // 点击搜索内容的区域\r\n  async searchItemClick(keyword) {\r\n    this.setState({\r\n      keyword,\r\n      value: \"\",\r\n    });\r\n    const result = await getSearchDetailList(keyword, 15);\r\n    this.setState({\r\n      searchDetailList: result.data.result.songs,\r\n    });\r\n  }\r\n  // 点击跳转歌曲页面播放音乐\r\n  handleClickTo = async (item, index) => {\r\n    // 获取歌曲的url路径\r\n    const resutlSongUrl = await getSongRUrl(item.id);\r\n    // 整合歌单列表的数据 并且向全局状态发送值\r\n    const playerList = this.state.searchDetailList.map((item) => ({\r\n      name: item.name,\r\n      id: item.id,\r\n      picUrl: item.artists[0].img1v1Url,\r\n      ar: item.artists,\r\n      al: item.album,\r\n    }));\r\n    // 歌曲播放需要的数据\r\n    const option = {\r\n      name: item.name,\r\n      id: item.id,\r\n      picUrl: item.artists[0].img1v1Url,\r\n      ar: item.artists,\r\n      al: item.album,\r\n      url: resutlSongUrl.data.data[0].url,\r\n    };\r\n    const init = getLocalStorage(\"hot_history\") || [];\r\n    if (init.indexOf(item.name) === -1) {\r\n      init.push(item.name);\r\n      setLocalStorage(\"hot_history\", init);\r\n    }\r\n    // 进行本地存储\r\n    setLocalStorage(\"player\", option);\r\n    setLocalStorage(\"playerList\", playerList);\r\n    setLocalStorage(\"playerIndex\", index);\r\n    // 发送歌曲的数据\r\n    this.props.getMenusData(option);\r\n    this.props.getPlayerList(playerList);\r\n    this.props.getPlayerIndex(index);\r\n    this.props.getIsPlay(true); // 播放\r\n    this.props.history.push(\"/player\"); // 跳转\r\n  };\r\n  render() {\r\n    const {\r\n      hotSearch,\r\n      msg,\r\n      historyList,\r\n      value,\r\n      searchList,\r\n      keyword,\r\n      searchDetailList,\r\n    } = this.state;\r\n    if (hotSearch.length) {\r\n      return (\r\n        <div className=\"search\">\r\n          {/* 头部 */}\r\n          <ScrollHeader height={50}>\r\n            <header className=\"header\">\r\n              <i\r\n                className=\"iconfont icon-jiantouzuo\"\r\n                onClick={() => this.props.history.push(\"/\")}\r\n              ></i>\r\n              <div className=\"search\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"搜索\"\r\n                  value={value}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <i className=\"iconfont icon-iconset0203\"></i>\r\n            </header>\r\n            {/* 搜索出来的内容列表 */}\r\n            <ul\r\n              className=\"search_song_list\"\r\n              style={{ display: value ? \"block\" : \"none\" }}\r\n            >\r\n              {searchList.map((item) => (\r\n                <li\r\n                  key={item.keyword}\r\n                  onClick={() => this.searchItemClick(item.keyword)}\r\n                >\r\n                  <i className=\"iconfont icon-search\"></i>\r\n                  <span>{item.keyword}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </ScrollHeader>\r\n          {!keyword ? (\r\n            <Fragment>\r\n              {/* 历史记录 */}\r\n              <section className=\"history\">\r\n                <h3>历史记录</h3>\r\n                {!(historyList || []).length ? (\r\n                  <p className=\"not\">暂无搜索记录...</p>\r\n                ) : (\r\n                  <Fragment>\r\n                    {historyList.map((item) => (\r\n                      <span\r\n                        key={item}\r\n                        className=\"tag\"\r\n                        onClick={() => this.searchItemClick(item)}\r\n                      >\r\n                        {item}\r\n                      </span>\r\n                    ))}\r\n                  </Fragment>\r\n                )}\r\n              </section>\r\n              {/* 热搜榜 */}\r\n              <section className=\"most\">\r\n                <h3>热搜榜</h3>\r\n                <ul className=\"most_list\">\r\n                  {hotSearch.map((item, index) => (\r\n                    <li key={index} onClick={() => this.handleClick(item)}>\r\n                      <div className=\"info\">\r\n                        <span\r\n                          className={\r\n                            index <= 3 ? \"activateIndex order\" : \"order\"\r\n                          }\r\n                        >\r\n                          {total(index + 1)}\r\n                        </span>\r\n                        <div className=\"song\">\r\n                          <div\r\n                            className={\r\n                              index <= 3\r\n                                ? \"activateTitle song_title\"\r\n                                : \"song_title\"\r\n                            }\r\n                          >\r\n                            {item.searchWord}\r\n                            {item.iconUrl && (\r\n                              <img src={item.iconUrl} alt=\"hot\" />\r\n                            )}\r\n                          </div>\r\n                          <p>{item.content}</p>\r\n                        </div>\r\n                      </div>\r\n                      <span>{item.score}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </section>\r\n            </Fragment>\r\n          ) : (\r\n            <ul className=\"search_list\">\r\n              {searchDetailList.map((item, index) => (\r\n                <li key={index}>\r\n                  <i\r\n                    className=\"iconfont icon-jiantouzuo\"\r\n                    onClick={() => {\r\n                      this.setState({ keyword: \"\" });\r\n                    }}\r\n                  ></i>\r\n                  <div\r\n                    className=\"song\"\r\n                    onClick={() => this.handleClickTo(item, index)}\r\n                  >\r\n                    <p>{item.name}</p>\r\n                    <p>\r\n                      {item.artists[0].name} ~ {item.album.name}\r\n                    </p>\r\n                  </div>\r\n                  <i className=\"iconfont icon-bofang\"></i>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n          {/* 消息提示 */}\r\n          <Prompt msg={msg} ref={(promptRef) => (this.promptRef = promptRef)} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Loading />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, {\r\n  getMenusData,\r\n  getPlayerList,\r\n  getPlayerIndex,\r\n  getIsPlay,\r\n})(Search);\r\n","\r\n// 函数节流\r\nexport default function (fn, time) {\r\n    let start = 0 \r\n    return function (...args) { \r\n        const newDate = new Date()\r\n        if (newDate - start >= time) {\r\n            start = new Date()\r\n            fn.call(this, ...args)\r\n        }\r\n    }\r\n}\r\n","export default num => num >= 10 ? num : '0' + num\r\n","import React, { Component, createRef } from 'react'\r\n// 处理头部固定定位的时候 抖动问题的组件\r\n// 启动fixed定位的时候 我们要有一个节点来进行防抖(设置高)，否则会有抖动的问题\r\nexport default class ScrollHeader extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        // ref标记头部的节点\r\n        this.headerRef = createRef()\r\n        // ref标记头部节点的防抖层\r\n        this.headerAntiShake = createRef()\r\n    }\r\n    componentDidMount () {\r\n        window.addEventListener('scroll', this.setFixed)\r\n    }\r\n    // 设置头部是否可以为fixed定位进行展示\r\n    setFixed = () => {\r\n        /* \r\n            props参数\r\n                height：固定防抖层的高度\r\n        */\r\n        const scrollTop = document.documentElement.scrollTop\r\n        const headerDOM = this.headerRef.current\r\n        if (scrollTop > 0) {\r\n            this.headerAntiShake.current.style.height = this.props.height + 'px'\r\n            headerDOM.classList.add('header_fixed')\r\n        } else {\r\n            headerDOM.classList.remove('header_fixed')\r\n            this.headerAntiShake.current.style.height = null\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div ref={this.headerAntiShake}>\r\n                <section className=\"\" ref={this.headerRef}>\r\n                    {this.props.children}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n    // 组件销毁的时候清除定时器\r\n    componentWillUnmount () {\r\n        window.removeEventListener('scroll', this.setFixed)\r\n    }\r\n}\r\n"],"sourceRoot":""}