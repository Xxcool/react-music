{"version":3,"sources":["views/Discover/Discover.js","component/common/LazyLoading.js","static/images/loading-error.svg","static/images/loading.svg","component/content/RemoSongItem.js","component/content/BoutiqueSong.js","component/content/SlideShow.js","component/content/SlideShowLarge.js"],"names":["setLocalStorage","localStorage","getLocalStorage","Discover","state","banner","recommend","song","newMusic","option","icon","title","path","handleRecommend","a","loginStatus","props","Object","keys","length","Toast","info","history","push","handleClick","item","index","getSongRUrl","id","resutlSongUrl","name","picUrl","ar","artists","al","url","data","playerList","map","init","indexOf","console","log","getMenusData","getPlayerList","getPlayerIndex","getIsPlay","this","getData","getNewMusicData","optionDOM","className","key","to","onClick","getBanner","resultBanner","banners","image","pic","getRecommendSong","resultRecommend","result","playCount","getSong","resultSong","playlists","coverImgUrl","setState","NewMusicData","customPaging","handleShowBanner","largeSlide","src","alias","album","color","ref","msg","promptRef","Component","connect","LazyLoading","config","options","error","require","loading","throttleWait","module","exports","RemoSongItem","style","numberFormat","BoutiqueSong","SlideShow","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","arrows","alt","SlideShowLarge","isBannerShow","animation","slideShowRef","current","opacity","stopBodyScroll","handleHideBanner","setTimeout","createRef","display","children"],"mappings":"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","file":"static/js/9.9437eb0e.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getBanner,\r\n  getRecommendSong,\r\n  getSong,\r\n  getSongRUrl,\r\n  NewMusicData,\r\n} from \"../../api/index\";\r\nimport {\r\n  getMenusData,\r\n  getPlayerList,\r\n  getIsPlay,\r\n  getPlayerIndex,\r\n} from \"../../store/action\";\r\nimport SlideShow from \"../../component/content/SlideShow\";\r\nimport RemoSongItem from \"../../component/content/RemoSongItem\";\r\nimport SlideShowLarge from \"../../component/content/SlideShowLarge\";\r\nimport BoutiqueSong from \"../../component/content/BoutiqueSong\";\r\nimport Prompt from \"../../component/content/Prompt\";\r\nimport Loading from \"../../component/content/Loading\";\r\nimport LazyLoading from \"../../component/common/LazyLoading\";\r\nimport localStorage from \"../../utils/localStorage\";\r\nimport { Toast } from 'antd-mobile';\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nconst { setLocalStorage, getLocalStorage } = localStorage;\r\nclass Discover extends Component {\r\n  state = {\r\n    banner: [], // 轮播图数据\r\n    recommend: [], // 推荐歌单数据\r\n    song: [], // 歌单数据\r\n    newMusic: [], // 歌单详情列表数据\r\n  };\r\n  option = [\r\n    // 菜单选项\r\n    { icon: \"iconfont icon-rili\", title: \"每日推荐\", path: null },\r\n    { icon: \"iconfont icon-gedan\", title: \"歌单\", path: \"/songsheet\" },\r\n    { icon: \"iconfont icon-paihangbang\", title: \"排行榜\", path: \"/rank\" },\r\n    { icon: \"iconfont icon-diantai\", title: \"电台\", path: \"/dj\" },\r\n  ];\r\n  // 同步进行请求数据\r\n  UNSAFE_componentWillMount() {\r\n    this.getData();\r\n    this.getNewMusicData()\r\n    // 同步方法进行渲染菜单选项的解构\r\n    this.optionDOM = (\r\n      <ul className=\"discover_option\">\r\n        {this.option.map((item) => {\r\n          return item.path ? (\r\n            <li key={item.title}>\r\n              <NavLink to={item.path}>\r\n                <div className=\"icon\">\r\n                  <i className={item.icon}></i>\r\n                </div>\r\n                <span>{item.title}</span>\r\n              </NavLink>\r\n            </li>\r\n          ) : (\r\n            <li key={item.title}>\r\n              <div onClick={this.handleRecommend}>\r\n                <div className=\"icon\">\r\n                  <i className={item.icon}></i>\r\n                </div>\r\n                <span>{item.title}</span>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n  // 请求数据的方法\r\n  async getData() {\r\n    // 轮播图数据\r\n    const resultBanner = await getBanner(1); // 1代表请求轮播图的MV资源类型 1-->MV\r\n    const banner = resultBanner.data.banners.map((item) => ({\r\n      image: item.pic,\r\n    })); // 处理轮播图的数据\r\n    // 推荐歌单的数据\r\n    const resultRecommend = await getRecommendSong(8);\r\n    const recommend = resultRecommend.data.result.map((item) => ({\r\n      id: item.id,\r\n      name: item.name,\r\n      picUrl: item.picUrl,\r\n      playCount: item.playCount,\r\n    }));\r\n    // 歌单数据\r\n    const resultSong = await getSong(\"华语\", \"hot\", 39);\r\n    const song = resultSong.data.playlists.map((item) => ({\r\n      id: item.id,\r\n      name: item.name,\r\n      picUrl: item.coverImgUrl,\r\n      playCount: item.playCount,\r\n    }));\r\n    this.setState({\r\n      banner,\r\n      recommend,\r\n      song,\r\n    });\r\n\r\n    \r\n  }\r\n  // 点击跳转到推荐音乐页面 需要提前登录\r\n  handleRecommend = async () => {\r\n    const { loginStatus } = this.props;\r\n    if (!Object.keys(loginStatus).length) {\r\n      // this.promptRef.handlePromptToggle();\r\n      return Toast.info('请先登录');\r\n    } else {\r\n      this.props.history.push(\"/recommend?id=daily\");\r\n    }\r\n  };\r\n\r\n  async getNewMusicData() {\r\n    // 获取最新音乐\r\n    const result = await NewMusicData();\r\n    this.setState({\r\n      newMusic: result.data.result,\r\n    });\r\n  }\r\n\r\n  // 点击最新音乐\r\n  handleClick = async (item, index) => {\r\n    // 获取歌曲的url路径\r\n    const resutlSongUrl = await getSongRUrl(item.id);\r\n    // 歌曲播放需要的数据\r\n    const option = {\r\n      name: item.name,\r\n      id: item.id,\r\n      picUrl: item.picUrl,\r\n      ar: item.song.artists,\r\n      al: item,\r\n      url: resutlSongUrl.data.data[0].url,\r\n    };\r\n    \r\n    // 整合歌单列表的数据 并且向全局状态发送值\r\n    const playerList = this.state.newMusic.map((item) => ({\r\n      name: item.name,\r\n      id: item.id,\r\n      picUrl: item.picUrl,\r\n      ar: item.song.artists,\r\n      al: item,\r\n    }));\r\n    const init = getLocalStorage(\"hot_history\") || [];\r\n    if (init.indexOf(item.name) === -1) {\r\n      init.push(item.name);\r\n      setLocalStorage(\"hot_history\", init);\r\n    }\r\n    // 进行本地存储\r\n    console.log(option, 'option');\r\n    setLocalStorage(\"player\", option);\r\n    setLocalStorage(\"playerList\", playerList);\r\n    setLocalStorage(\"playerIndex\", index);\r\n    // 发送歌曲的数据\r\n    this.props.getMenusData(option);\r\n    this.props.getPlayerList(playerList);\r\n    this.props.getPlayerIndex(index);\r\n    this.props.getIsPlay(true); // 播放\r\n    this.props.history.push(\"/player\"); // 跳转\r\n  };\r\n  render() {\r\n    const { banner, recommend, song, newMusic } = this.state;\r\n    console.log(newMusic);\r\n    // debugger\r\n    if (banner.length) {\r\n      return (\r\n        <Fragment>\r\n          <div className=\"discover recommend\">\r\n            <SlideShow\r\n              banner={banner}\r\n              customPaging={() => <span></span>}\r\n              className={\"home_slide\"}\r\n              handleShowBanner={() => {\r\n                // 点击显示大图轮播图\r\n                this.largeSlide.handleShowBanner(); // 通过ref标记节点的方式调用子级组件的方法\r\n              }}\r\n            />\r\n            {this.optionDOM}\r\n            <section className=\"discover_song\">\r\n              <header className=\"discover_song_head\">\r\n                <h3>发现好歌单</h3>\r\n                {/* <p>查看更多</p> */}\r\n              </header>\r\n              <BoutiqueSong recommend={recommend} />\r\n            </section>\r\n            <section className=\"discover_song_new recommend_list\">\r\n              <header className=\"discover_song_head\">\r\n                <h3>最新音乐</h3>\r\n              </header>\r\n              <ul>\r\n                {newMusic.map((item, index) => (\r\n                  <li key={index} onClick={() => this.handleClick(item, index)}>\r\n                    <div className=\"song_des\">\r\n                      <LazyLoading src={item.picUrl} />\r\n                      <div className=\"song_des_info\">\r\n                        <p className=\"title\">\r\n                          {item.name}&nbsp;\r\n                          <span>{item.song.alias.length > 0 ? `(${item.song.alias[0]})`  : ''}</span>\r\n                        </p>\r\n                        <p>\r\n                          {item.song.artists[0].name} - {item.song.album.name}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"song_mv\">\r\n                      <i className=\"iconfont icon-tuya-\"></i>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </section>\r\n            <section className=\"discover_song discover_song_every\">\r\n              <header className=\"discover_song_head\">\r\n                <h3>晚霞灿烂 音乐惬意</h3>\r\n              </header>\r\n              <section className=\"song_every_list\">\r\n                {song.map((item, index) => (\r\n                  <NavLink\r\n                    to={`/recommend?id=${item.id}&name=${item.name}`}\r\n                    key={index}\r\n                  >\r\n                    <RemoSongItem item={item} color={\"#000\"} />\r\n                  </NavLink>\r\n                ))}\r\n              </section>\r\n            </section>\r\n          </div>\r\n          <SlideShowLarge ref={(largeSlide) => (this.largeSlide = largeSlide)}>\r\n            <SlideShow\r\n              banner={banner}\r\n              className=\"slider_show_slide\"\r\n              customPaging={(index) => {\r\n                return (\r\n                  <div>\r\n                    {index + 1}/{banner.length}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </SlideShowLarge>\r\n          <Prompt\r\n            msg={\"请您登陆\"}\r\n            ref={(promptRef) => (this.promptRef = promptRef)}\r\n          />\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return <Loading />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    loginStatus: state.loginStatus,\r\n  }),\r\n  {\r\n    getMenusData,\r\n    getPlayerList,\r\n    getIsPlay,\r\n    getPlayerIndex,\r\n  }\r\n)(Discover);\r\n","import React from 'react'\r\n// 引入图片懒加载的插件\r\nimport Lazyload from \"r-img-lazyload\";\r\n\r\nfunction LazyLoading (props) {\r\n    // 我们使用图片懒加载的目的是缓解首屏加载的压力，优化用户体验\r\n\r\n    // 配置图片懒加载\r\n    const config = {\r\n        // 其他配置项\r\n        options: {\r\n            error: require(\"../../static/images/loading-error.svg\"), // 加载失败后展示的图像\r\n            loading: require(\"../../static/images/loading.svg\"), // 加载中展示的图像\r\n            throttleWait: 1000 // 节流等待时间\r\n        },\r\n        // 图片地址\r\n        src: props.src\r\n    };\r\n    return <Lazyload {...config}/>\r\n}\r\n\r\nexport default LazyLoading\r\n","module.exports = __webpack_public_path__ + \"static/media/loading-error.99e68751.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.0bab9ee3.svg\";","import React from 'react'\r\nimport {numberFormat} from 'js-num-format'\r\nimport Lazyload from '../common/LazyLoading'\r\n\r\nconst RemoSongItem = props => {\r\n    const {item,color} = props\r\n    return (\r\n        <div className=\"song_item\" key={item.id}>\r\n            <div className=\"info\">\r\n                <Lazyload src={item.picUrl}/>\r\n                <p>\r\n                    <i className=\"iconfont icon-bofangsanjiaoxing\" style={{color}}></i>\r\n                    <span>{numberFormat(item.playCount)}</span>\r\n                </p>\r\n            </div>\r\n            <p>{item.name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RemoSongItem\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport RemoSongItem from '../../component/content/RemoSongItem'\r\nconst BoutiqueSong = props => {\r\n    const {recommend} = props\r\n    return (\r\n        <section className=\"song_recommend\">\r\n            {\r\n                recommend.map((item, index) => (\r\n                    <NavLink to={`/recommend?id=${item.id}&name=${item.name}`} key={index}>\r\n                        <RemoSongItem item={item} color={\"#fff\"}/>\r\n                    </NavLink>\r\n                ))\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BoutiqueSong\r\n","import React, { Component } from 'react'\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nexport default class SlideShow extends Component {\r\n    render() {\r\n        /*\r\n            banner: 数据源(必须)\r\n            className: 轮播图的类名，每一个轮播图都需要有一个className (可选)\r\n            customPaging: 自定义分页 (必须)\r\n            handleShowBanner: 可选，触发父级点击展示轮播图\r\n        */\r\n        const {banner,className,customPaging,handleShowBanner} = this.props\r\n        // 轮播图选项\r\n        const settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            autoplay: true,\r\n            arrows: false\r\n        };\r\n        return  (\r\n            <Slider {...settings} customPaging={customPaging} className={className}>\r\n                {\r\n                    banner.map((item,index) => <img src={item.image} alt=\"\" key={index} onClick={handleShowBanner ? handleShowBanner : () => {}}/>)\r\n                }\r\n            </Slider>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, createRef } from 'react'\r\n// import SlideShow from './SlideShow'\r\nimport animation from '../../utils/animation'\r\nimport stopBodyScroll from '../../utils/stopBodyScroll'\r\n\r\nexport default class SlideShowLarge extends Component {\r\n    state = {\r\n        isBannerShow: false // 是否显示大图轮播图\r\n    }\r\n    constructor (props) {\r\n        super(props)\r\n        // 标记大图轮播图\r\n        this.slideShowRef = createRef()\r\n    }\r\n    // 点击显示展示轮播图\r\n    handleShowBanner = () => {\r\n        this.setState({\r\n            isBannerShow: true\r\n        })\r\n        animation(this.slideShowRef.current,{\r\n            opacity:1,\r\n        },0.25,function(){\r\n            stopBodyScroll(true)\r\n        })\r\n    }\r\n    // 点击关闭展示轮播图\r\n    handleHideBanner = () => {\r\n        animation(this.slideShowRef.current,{\r\n            opacity:0,\r\n        },0.3,() => {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    isBannerShow: false\r\n                })\r\n            }, 300)\r\n        })\r\n        stopBodyScroll(false)\r\n    }\r\n    render() {\r\n        const {isBannerShow} = this.state\r\n        return (\r\n           <div  className=\"slider_show\" onClick={this.handleHideBanner} ref={this.slideShowRef} style={{display: isBannerShow ? 'block' : 'none'}}>\r\n               {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}